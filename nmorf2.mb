Include "MapBasic.def"

Declare Sub Main
Declare Function BuildListOfColumns(Table As Integer) As String
Declare Function BuildListOfTables() As String
Declare Sub      CreateDialog(Table As Integer, Column As Integer)
Declare Sub      UpdateDialog
Declare Sub      CalcMapExtent(Table As String, ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY As Float)
Declare Sub	 MakeRaster(TableName As String, RasterStep As Float, ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY As Float)
Declare Sub      FillDensity(TableName, RasterName As String, ColumnNum As Integer)
Declare Function CalcCommonDensity(RasterName As String) As Float
Declare Sub      CalcVectorMultipliers(RasterName As String, CommonDensity As Float)
Declare Sub      ApplyVectors(TableName, RasterName As String, RasterStep As Float)

Function BuildListOfTables() As String
	Dim Table As Integer
	Dim ListOfTables As String
	For Table = 1 To NumTables()
		ListOfTables = ListOfTables + TableInfo(Table, TAB_Info_NAME) + ";"
	Next
	BuildListOfTables = ListOfTables
End Function

Function BuildListOfColumns(Table As Integer) As String
	Dim Column As Integer
	Dim Return As String
	For Column = 1 To NumCols(Table)
		Return = Return + ColumnInfo (Table, "COL" + Column, COL_Info_NAME) + ";"
	Next
	BuildListOfColumns = Return
End Function

Sub CreateDialog (Table As Integer, Column As Integer)
	Dialog  
		Title "Select nmorf setup"

		Control PopupMenu
			Title   BuildListOfTables()
			Into    Table
			Calling UpdateDialog
			Id      1

		Control PopupMenu
			Title   BuildListOfColumns(Table)
			Into    Column
			Id      2

		Control OKBUTTON
		Control CANCELBUTTON
End Sub

Sub UpdateDialog
	Dim Table As Integer
	Table = ReadControlValue(1) 
	Alter Control 2 Title BuildListOfColumns(Table)
End Sub

Sub CalcMapExtent(Table As String, ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY As Float)
	Dim GeometryObject As Alias
	GeometryObject = Table + ".OBJ"
	
	Fetch First From Table
	
	ExtentTopLeftX = CentroidX(GeometryObject)
	ExtentTopLeftY = CentroidY(GeometryObject)
	ExtentBottomRightX = CentroidX(GeometryObject)
	ExtentBottomRightY = CentroidY(GeometryObject)

	While Not EOT(Table)
		If ObjectInfo(GeometryObject, OBJ_INFO_TYPE) = OBJ_REGION Then
			Dim NPOLYS, CPOLY, CPOINT, NPOINTS As Integer
			NPOLYS = ObjectInfo (GeometryObject, OBJ_Info_NPOLYGONS)
			For CPOLY = 1 To NPOLYS
				NPOINTS = ObjectInfo (GeometryObject, OBJ_Info_NPOLYGONS + CPOLY)
				For CPOINT = 1 To NPOINTS-1
					If ObjectNODEX(GeometryObject, CPOLY, CPOINT) < ExtentTopLeftX Then
						ExtentTopLeftX = ObjectNODEX(GeometryObject, CPOLY, CPOINT)
					End If
					
					If ObjectNODEX(GeometryObject, CPOLY, CPOINT) > ExtentBottomRightX Then 
						ExtentBottomRightX = ObjectNODEX(GeometryObject, CPOLY, CPOINT)
					End If
					
					If ObjectNODEY(GeometryObject, CPOLY, CPOINT) > ExtentTopLeftY Then
						ExtentTopLeftY = ObjectNODEY(GeometryObject, CPOLY, CPOINT)
					End If
					
					If ObjectNODEY(GeometryObject, CPOLY, CPOINT) < ExtentBottomRightY Then
						ExtentBottomRightY = ObjectNODEY(GeometryObject, CPOLY, CPOINT)
					End If
				Next
			Next
		End If
		Fetch Next From Table
	Wend
End Sub

Sub MakeRaster(TableName As String, RasterStep As Float, ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY As Float)
	Dim X, Y As Float
	
	Y = ExtentTopLeftY
	While Y > ExtentBottomRightY
		X = ExtentTopLeftX
		While X < ExtentBottomRightX
			Insert Into TableName (Obj) Values (CreatePoint(X, Y))
			X = X + RasterStep
		Wend
		Y = Y - RasterStep
	Wend
End Sub

Sub FillDensity(TableName, RasterName As String, ColumnNum As Integer)
	Dim Cell, ColVal, Reg As Alias
	Cell = RasterName + ".OBJ"
	ColVal = TableName + ".COL" + ColumnNum
	Reg = TableName + ".OBJ"
	
	Fetch First From RasterName
	
	Dim idnum as Integer
	idnum = 1
	
	While Not EOT(RasterName)
		' Get Intersection
		Fetch First From TableName
		
		While Not EOT(TableName)
			' Check Intersection w/ Obj
			If (Cell Within Reg) Then
				Dim F As Float
				F = ColVal / Area(Reg, "SQ KM")
				Update RasterName Set Density = F Where RowID = idnum
			End If
			Fetch Next From TableName
		Wend
		idnum = idnum + 1
		Fetch Next From RasterName
	Wend
End Sub

Function CalcCommonDensity(RasterName As String) As Float
	Dim Density As Alias
	Density = RasterName + ".COL1"
	
	Dim CommonDensity As Float
	CommonDensity = 0
	
	Dim Counter As Integer
	Counter = 0
	
	Fetch First From RasterName
	While Not EOT(RasterName)
		If Density > 0 Then
			CommonDensity = CommonDensity + Density
		End If
		Fetch Next From RasterName
		Counter = Counter + 1
	Wend
	CommonDensity = CommonDensity / Counter
	CalcCommonDensity = CommonDensity
End Function

Sub CalcVectorMultipliers(RasterName As String, CommonDensity As Float)
	Dim Density As Alias
	Density = RasterName + ".COL1"
	
	Dim idnum as Integer
	idnum = 1
	
	Fetch First From RasterName
	While Not EOT(RasterName)
		Dim M As Float
		M = Density / CommonDensity
		Update RasterName Set Multiplier = M Where RowID = idnum
		Fetch Next From RasterName
		idnum = idnum + 1
	Wend
End Sub

Sub ApplyVectors(TableName, RasterName As String, RasterStep As Float)
	Dim ObjColumn As Alias
	ObjColumn = TableName + ".OBJ"

	Fetch First From TableName
	
	'loop over regions
	While Not EOT(TableName)
		Dim GeometryObject As Object
		GeometryObject = ObjColumn
		If ObjectInfo (GeometryObject, OBJ_Info_TYPE) = OBJ_REGION Then
			Dim NPOLYS, CPOLY, NPOINTS, CPOINT As Integer
			NPOLYS = ObjectInfo(GeometryObject, OBJ_Info_NPOLYGONS)
			'loop over polys
			For CPOLY = 1 To NPOLYS
				NPOINTS = ObjectInfo(GeometryObject, OBJ_Info_NPOLYGONS + CPOLY)
				'loop over vertices
				For CPOINT = 1 To NPOINTS-1
					Dim NodeX, NodeY As Float
					NodeX = ObjectNodeX(GeometryObject, CPOLY, CPOINT)
					NodeY = ObjectNodeY(GeometryObject, CPOLY, CPOINT)
					
					Dim SumX, SumY As Float
					SumX = 0
					SumY = 0
					'loop over cells
					Fetch First From RasterName
					While Not EOT(RasterName)
						Dim Cell As Alias
						Cell = RasterName + ".OBJ"
						
						'build vector
						Dim CellX, CellY As Float
						CellX = CentroidX(Cell)
						CellY = CentroidY(Cell)
						
						Dim VecX, VecY As Float
						VecX = CellX - NodeX
						VecY = CellY - NodeY
						
						Dim CopyX, CopyY As Float
						CopyX = VecX
						CopyY = VecY
						
						'calc vector len
						Dim VecLen As Float
						VecLen = Sqr( (CellX-NodeX)^2 + (CellY-NodeY)^2 )
						
						'make vector len = 1 * RasterStep/2
						VecX = VecX / VecLen * RasterStep/2
						VecY = VecY / VecLen * RasterStep/2
						
						'mult vector by cell multiplier
						Dim Multiplier As Alias
						Multiplier = RasterName + ".COL2"
						
						VecX = VecX * Multiplier
						VecY = VecY * Multiplier
						
						'calc difference
						Dim DiffX, DiffY As Float
						DiffX = VecX - CopyX
						DiffY = VecY - CopyY
						
						'sum difference
						SumX = SumX + DiffX
						SumY = SumY + DiffY
						
						Fetch Next From RasterName
					Wend
					
					'move to sum vector
					Alter Object GeometryObject Node Set Position CPOLY, CPOINT (NodeX + SumX, NodeY + SumY)
				Next
			Next
			
			Dim CURROW As Alias
			CURROW = TableName + ".RowId"
			UPDATE TableName SET Obj = GeometryObject WHERE RowId = CURROW
		End If
		Fetch Next From TableName
	Wend
End Sub

Sub Main()
	Dim RasterName As String
	RasterName = "Raster"
	
	Dim ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY As Float
	
	Dim TableNum, ColumnNum As Integer
	
	TableNum = 1
	ColumnNum = 1

	Call CreateDialog(TableNum, ColumnNum)

	If CommandInfo(CMD_INFO_DLG_OK) Then
		Dim TableName As String
		TableName = TABLEInfo(TableNum, TAB_Info_NAME)
		
		' create grid {obj, density}
		Create Table Raster (Density Float, Multiplier Float)
		Create Map For Raster CoordSys Table TableName
		
		Call CalcMapExtent(TableName, ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY)
		
		Dim RasterStep As Float
		RasterStep = 0.5
		
		' fill from top-left with choosed step
		Call MakeRaster(RasterName, RasterStep, ExtentTopLeftX, ExtentTopLeftY, ExtentBottomRightX, ExtentBottomRightY)
		
		'do
			' fill grid
				' fill base density
				Call FillDensity(TableName, RasterName, ColumnNum)
				' calc middle density
				Dim CommonDensity As Float
				CommonDensity = CalcCommonDensity(RasterName) 
				' calc vector multiplier
				Call CalcVectorMultipliers(RasterName, CommonDensity)
			' deform geometry
				'sum vectors
				'aplly vector
				Call ApplyVectors(TableName, RasterName, RasterStep)
			' calc error
		' repeat (error > e)
	End If
End Sub